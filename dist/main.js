(()=>{"use strict";function e(){let e=document.getElementById("main-side");for(;e.firstChild;)e.removeChild(e.firstChild)}function t(){document.querySelector(".projectListe").innerHTML="";var e=0;console.log("tood to render");const t=document.querySelector(".projectListe"),n=localStorage.getItem("todos");(JSON.parse(n)||[]).forEach((n=>{const d=document.createElement("div"),a=document.createElement("div"),o=document.createElement("div"),i=document.createElement("i");o.classList.add("delete"),i.classList="fas fa-trash",o.setAttribute("data-index",e),o.appendChild(i),a.textContent=`${n.title}`,d.setAttribute("data-index",e),d.classList.add("project"),a.classList.add("projectName"),d.appendChild(a),d.appendChild(o),t.appendChild(d),e+=1}))}function n(){e();const t=document.getElementById("main-side"),n=document.createElement("div"),d=document.createElement("div"),a=document.createElement("div"),o=document.createElement("hr"),i=document.createElement("div"),l=document.createElement("button");l.textContent="Add task",l.id="addTask",i.classList="taskContainer",n.classList="taskPanel",n.id="taskPanel",d.classList="projectInfoContainer",a.appendChild(o),document.querySelectorAll(".project").forEach((o=>{o.addEventListener("click",(()=>{console.log("Asdaffsd"),e();var c=JSON.parse(localStorage.getItem("todos")),s=o.dataset.index;d.textContent=c[s].title,n.appendChild(d),n.appendChild(a),c[s].task.forEach((e=>{const t=document.createElement("div");t.classList="task";const n=document.createElement("div");n.classList="taskInfo";const d=document.createElement("div");d.classList="delete";const a=document.createElement("i");a.classList="fas fa-trash",d.appendChild(a);const o=document.createElement("div"),c=document.createElement("div"),r=document.createElement("div");"High"===e.importance?r.classList="red":"Low"===e.importance?r.classList="green":r.classList="yellow",o.textContent=`${e.title}`,c.textContent=`${e.description}`,r.textContent=`${e.importance}`,n.appendChild(o),n.appendChild(c),n.appendChild(r),l.setAttribute("data-index",s),t.appendChild(n),t.appendChild(d),i.appendChild(t)})),n.appendChild(i),n.appendChild(l),t.appendChild(n)}))})),l.addEventListener("click",(e=>{!function(e){console.log("i'm not ready yet to add a task");const t=document.querySelector(".taskContainer"),n=document.createElement("div"),d=document.createElement("div"),a=document.createElement("div"),o=document.createElement("i"),i=document.createElement("dialog"),l=document.createElement("input"),c=document.createElement("textarea"),s=document.createElement("input"),r=document.createElement("input"),m=document.createElement("input"),p=document.createElement("div"),u=document.createElement("p"),h=document.createElement("label"),C=document.createElement("label"),E=document.createElement("label"),v=document.createElement("label"),f=document.createElement("button"),g=document.createElement("button");u.textContent="Add task ici :) ",h.textContent="How important is it ¿?",C.textContent="High",E.textContent="Medium",v.textContent="Low",f.textContent="Cancel",g.textContent="Add to local storage",f.setAttribute("type","button"),g.setAttribute("type","submit"),l.type="text",s.type="radio",r.type="radio",m.type="radio",s.id="r1",r.id="r2",m.id="r3",s.name="option",r.name="option",m.name="option",s.value="High",r.value="Medium",m.value="Low",C.setAttribute("for","r1"),E.setAttribute("for","r2"),v.setAttribute("for","r3"),l.setAttribute("placeholder","titl ..."),c.setAttribute("placeholder","Amy thing to note ..."),l.required=!0,c.required=!0,p.appendChild(C),p.appendChild(s),p.appendChild(E),p.appendChild(r),p.appendChild(v),p.appendChild(m),i.appendChild(u),i.appendChild(l),i.appendChild(c),i.appendChild(h),i.appendChild(p),i.appendChild(f),i.appendChild(g),t.appendChild(i),i.showModal(),g.addEventListener("click",(s=>{s.preventDefault();let r=JSON.parse(localStorage.getItem("todos"))||[];console.log(r.length);let m={title:l.value,description:c.value,importance:document.querySelector('input[name="option"]:checked').value};r[e].task.push(m),localStorage.setItem("todos",JSON.stringify(r)),n.classList="task",d.classList="taskInfo",a.classList="delete",o.classList="fas fa-trash";const p=document.createElement("div"),u=document.createElement("div"),h=document.createElement("div");p.textContent=l.value,u.textContent=c.value,h.textContent=m.importance,d.appendChild(p),d.appendChild(u),d.appendChild(h),a.appendChild(o),n.appendChild(d),n.appendChild(a),t.appendChild(n),i.close(),i.remove(),console.log("item added successfully")})),f.addEventListener("click",(()=>{i.close(),i.remove()}))}(e.currentTarget.getAttribute("data-index"))}))}function d(){let e=JSON.parse(localStorage.getItem("todos"))||[];0===e.length&&(e.push({title:"Default Project",index:0,task:[{title:"Default title",description:"Default description",importance:"High"}]}),localStorage.setItem("todos",JSON.stringify(e)))}function a(){e();const t=document.getElementById("main-side"),n=document.createElement("div");n.textContent="What To Do",n.className="welcome",t.appendChild(n)}d(),a(),document.addEventListener("DOMContentLoaded",(()=>{t(),function(){const n=document.querySelector(".left-side"),o=document.createElement("div");o.textContent="Reset Local storage",o.className="reset",n.appendChild(o),o.addEventListener("click",(()=>{localStorage.clear(),e(),d(),t(),a()}))}(),document.getElementById("add").addEventListener("click",(()=>{!function(){e();const d=document.getElementById("main-side"),a=document.createElement("div"),o=document.createElement("label"),i=document.createElement("input"),l=document.createElement("button"),c=document.createElement("button"),s=document.createElement("div");i.id="projectTitle",i.setAttribute("placeholder","project name ici ..."),o.classList.add("titre"),a.classList.add("addContainer"),i.classList.add("champsDeSaisie"),l.classList="addBtn bouton",c.classList="cancelBtn bouton",s.classList.add("btns"),l.setAttribute("type","submit"),c.setAttribute("type","button"),o.textContent="Titre du projet",o.setAttribute("for","projectTitle"),l.textContent="Add",c.textContent="Cancel",a.appendChild(o),a.appendChild(i),s.appendChild(l),s.appendChild(c),a.appendChild(s),d.appendChild(a),i.focus(),l.addEventListener("click",(function(){if(""!==i.value){let d=JSON.parse(localStorage.getItem("todos"))||[];d.push({title:`${i.value}`,index:d.length,task:[{title:"Default title",description:"Default description",importance:"High"}]}),localStorage.setItem("todos",JSON.stringify(d)),i.value="",e(),t(),n()}else alert("saise un project d'abord ")})),c.addEventListener("click",(function(){t(),n()}))}()}));const o=document.querySelector(".title");o.addEventListener("mouseenter",(()=>{o.style.cursor="pointer",o.addEventListener("click",(()=>{a()}))})),document.querySelectorAll(".projectName").forEach((t=>{t.addEventListener("click",(()=>{n(),e()}))})),document.querySelectorAll(".delete").forEach((e=>{e.addEventListener("click",(()=>{!function(e){let n=JSON.parse(localStorage.getItem("todos"))||[],d=n.findIndex((t=>t.index===parseInt(e)));n.splice(d,1),localStorage.setItem("todos",JSON.stringify(n));let a=JSON.parse(localStorage.getItem("todos"))||[];var o=0;a.forEach((e=>{e.index=o,o+=1})),localStorage.setItem("todos",JSON.stringify(a)),location.reload(),t()}(e.getAttribute("data-index"))}))}))}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,